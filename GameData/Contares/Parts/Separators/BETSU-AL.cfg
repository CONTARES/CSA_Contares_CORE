PART
{
name = BETSU-AL
module = Part
author = hraban

// --- asset parameters ---
MODEL
{
   model = Contares/Parts/Separators/BETSU-AL
}
	rescaleFactor = 1.0
	scale = 1.0	
	node_attach = 0.0, 0.0, 0.0, 0.0, 0.0, -1.0

	TechRequired = advRocketry
	entryCost = 800
	cost = 74
	category = Engine
	subcategory = 0
	title = Betsu radial Separation Motor type Aliyana
	manufacturer = Contares
	description = Small dual separation boosters in an aerodynamic housing.  
	tags = contares neutron yenisei aliyana a5 a6 cosmos sunkar kerlot feniks
	attachRules = 0,1,0,0,0
	mass = 0.014
	heatConductivity = 0.04 
	skinInternalConductionMult = 4.0
	emissiveConstant = 0.5 
	dragModelType = default
	maximum_drag = 0.3
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 10
	maxTemp = 2000 
	ActivatesEvenIfDisconnected = true
	stagingIcon = SOLID_BOOSTER
	bulkheadProfiles = srf
	
		tags = contares separator radial
		
MODULE
{
	name = ModuleEnginesFX
	engineID = CSA_LES
	runningEffectName = solid
	thrustVectorTransformName = thrustTransform
	exhaustDamage = False
	throttleLocked = True
	allowShutdown = False
	ignitionThreshold = 0.1
	minThrust = 0
	maxThrust = 16
	heatProduction = 400
	fxOffset = 0, 0, 0
	PROPELLANT
	{
	 	name = SolidFuel
        	ratio = 1.0
		DrawGauge = True
	}
	atmosphereCurve
 	{
   	 key = 0 154	
  	 key = 1 118
 	}	
}

RESOURCE
{
	name = SolidFuel
	amount = 6
	maxAmount = 6
}

EFFECTS
{
	running_solid
	{
		AUDIO
		{
			channel = Ship
			clip = sound_rocket_hard
			volume = 0.0 0.0
			volume = 0.01 0.1
			volume = 1.0 0.5
			pitch = 0.0 1
			pitch = 1.0 1
			loop = true
		}
	}
	engage
	{
		AUDIO
		{
			channel = Ship
			clip = sound_vent_medium
			loop = false
		}
	}
	disengage
	{
		AUDIO
		{
			channel = Ship
			clip = sound_vent_soft
			loop = false
			volume = 1.5
			pitch = 0.8
		}
	}
}
	
MODULE
{
	name = ModuleWaterfallFX
	moduleID = CSA_LES_FX
	version = FixedRampRates
	ATMOSPHEREDENSITYCONTROLLER
	{
		name = atmosphereDepth
	}
	THROTTLECONTROLLER
	{
		responseRateUp = 4000
		responseRateDown = 4000
		engineID = CSA_LES
		name = throttle
	}
	RANDOMNESSCONTROLLER
	{
		range = 0,1
		noiseType = random
		scale = 1
		minimum = 0
		speed = 1
		name = random
	}
	RANDOMNESSCONTROLLER
	{
		range = 0,0
		noiseType = perlin
		scale = 0.5
		minimum = -0.5
		speed = 10
		name = Random2
		seed = 40
	}
	TEMPLATE
	{
		templateName = CSA_LES_LOW
		overrideParentTransform = thrustTransform
		position = 0,0,0
		rotation = 0,0,0
		scale = 0.2,0.2,0.2
	}
}	
	
	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = True
		situationMask = 60
		CONSTRAINT
		{
			// disable all but home
			type = SITUATION
			value = 0
			body = _NotHome
			prestige = Trivial
		}
		CONSTRAINT
		{
			// disable all but home
			type = SITUATION
			value = 0
			body = _NotHome
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 0
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 600
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 0
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 900
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 300
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 1200
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 200
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 100
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 100
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 50
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 50
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 20
			prestige = Exceptional
		}
	}
}
